======================
A.6 match_expression 2
======================


encapsulated package Main

protected function makeDebugResult
  input Flags.DebugFlag inFlag;
  input String res;
  output String res_1;
algorithm
  res_1 := matchcontinue (inFlag,res)
    "this is a string_comment"
    local
      String debugstr,res_with_debug,flagstr;
    case (Flags.DEBUG_FLAG(name = flagstr),_)
      equation
        true = Flags.isSet(inFlag);
        debugstr = Print.getString();
        res_with_debug = stringAppendList({res,"\n---DEBUG(",flagstr,")---\n",debugstr,"\n---/DEBUG(",flagstr,")---\n"});
      then res_with_debug;
    else res;
  end matchcontinue;
end makeDebugResult;

end Main;

---

(stored_definition
  (class_definition
    (ENCAPSULATED)
    (class_type
      (PACKAGE))
    (class_specifier
      (identifier
        (IDENT))
      (composition
        (PROTECTED)
        (element
          (class_definition
            (class_type
              (FUNCTION))
            (class_specifier
              (identifier
                (IDENT))
              (composition
                (element
                  (component_clause
                    (type_prefix
                      (T_INPUT))
                    (type_specifier
                      (name_path
                        (IDENT)
                        (DOT)
                        (IDENT)))
                    (component_declaration
                      (declaration
                        (IDENT)))))
                (element
                  (component_clause
                    (type_prefix
                      (T_INPUT))
                    (type_specifier
                      (T_STRING))
                    (component_declaration
                      (declaration
                        (IDENT)))))
                (element
                  (component_clause
                    (type_prefix
                      (T_OUTPUT))
                    (type_specifier
                      (T_STRING))
                    (component_declaration
                      (declaration
                        (IDENT)))))
                (algorithm_clause
                  (T_ALGORITHM)
                  (algorithm
                    (assign_clause_a
                      (simple_expression
                        (component_reference
                          (IDENT)))
                      (ASSIGN)
                      (expression
                        (match_expression
                          (MATCHCONTINUE)
                          (expression
                            (simple_expression
                              (LPAR)
                              (expression
                                (simple_expression
                                  (component_reference
                                    (IDENT))))
                              (COMMA)
                              (expression
                                (simple_expression
                                  (component_reference
                                    (IDENT))))
                              (RPAR)))
                          (string_comment
                            (STRING))
                          (local_clause
                            (LOCAL)
                            (element
                              (component_clause
                                (type_specifier
                                  (T_STRING))
                                (component_declaration
                                  (declaration
                                    (IDENT)))
                                (COMMA)
                                (component_declaration
                                  (declaration
                                    (IDENT)))
                                (COMMA)
                                (component_declaration
                                  (declaration
                                    (IDENT))))))
                          (cases
                            (onecase
                              (CASE)
                              (expression
                                (simple_expression
                                  (LPAR)
                                  (expression
                                    (simple_expression
                                      (component_reference
                                        (IDENT)
                                        (DOT)
                                        (IDENT))
                                      (function_call
                                        (LPAR)
                                        (function_arguments
                                          (named_argument
                                            (IDENT)
                                            (EQUALS)
                                            (expression
                                              (simple_expression
                                                (component_reference
                                                  (IDENT))))))
                                        (RPAR))))
                                  (COMMA)
                                  (expression
                                    (simple_expression
                                      (component_reference
                                        (WILD))))
                                  (RPAR)))
                              (EQUATION)
                              (equation
                                (equality_or_noretcall_equation
                                  (simple_expression
                                    (T_TRUE))
                                  (EQUALS)
                                  (expression
                                    (simple_expression
                                      (component_reference
                                        (IDENT)
                                        (DOT)
                                        (IDENT))
                                      (function_call
                                        (LPAR)
                                        (function_arguments
                                          (expression
                                            (simple_expression
                                              (component_reference
                                                (IDENT)))))
                                        (RPAR))))))
                              (equation
                                (equality_or_noretcall_equation
                                  (simple_expression
                                    (component_reference
                                      (IDENT)))
                                  (EQUALS)
                                  (expression
                                    (simple_expression
                                      (component_reference
                                        (IDENT)
                                        (DOT)
                                        (IDENT))
                                      (function_call
                                        (LPAR)
                                        (function_arguments
                                          (expression
                                            (simple_expression
                                              (component_reference
                                                (MISSING IDENT)))))
                                        (RPAR))))))
                              (equation
                                (equality_or_noretcall_equation
                                  (simple_expression
                                    (component_reference
                                      (IDENT)))
                                  (EQUALS)
                                  (expression
                                    (simple_expression
                                      (component_reference
                                        (IDENT))
                                      (function_call
                                        (LPAR)
                                        (function_arguments
                                          (expression
                                            (simple_expression
                                              (LBRACE)
                                              (expression
                                                (simple_expression
                                                  (component_reference
                                                    (IDENT))))
                                              (COMMA)
                                              (expression
                                                (simple_expression
                                                  (STRING)))
                                              (COMMA)
                                              (expression
                                                (simple_expression
                                                  (component_reference
                                                    (IDENT))))
                                              (COMMA)
                                              (expression
                                                (simple_expression
                                                  (STRING)))
                                              (COMMA)
                                              (expression
                                                (simple_expression
                                                  (component_reference
                                                    (IDENT))))
                                              (COMMA)
                                              (expression
                                                (simple_expression
                                                  (STRING)))
                                              (COMMA)
                                              (expression
                                                (simple_expression
                                                  (component_reference
                                                    (IDENT))))
                                              (COMMA)
                                              (expression
                                                (simple_expression
                                                  (STRING)))
                                              (RBRACE))))
                                        (RPAR))))))
                              (THEN)
                              (expression
                                (simple_expression
                                  (component_reference
                                    (IDENT)))))
                            (elsecase
                              (ELSE)
                              (expression
                                (simple_expression
                                  (component_reference
                                    (IDENT))))))
                          (T_END)
                          (MATCHCONTINUE)))))))
              (T_END)
              (identifier
                (IDENT))))))
      (T_END)
      (identifier
        (IDENT)))))
