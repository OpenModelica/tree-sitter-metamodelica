======================
A.6 match_expression 1
======================


encapsulated package A

protected function foo
  input B.UnionType inx;
  input String res;
  output String res_1;
algorithm
  res_1 := matchcontinue (inx,res)
    case(B.Type(name = "bar"),_)
      then "bar";
    else res;
  end matchcontinue;
end foo;

end A;

---

(stored_definition
  (class_definition
    (ENCAPSULATED)
    (class_type
      (PACKAGE))
    (class_specifier
      (identifier
        (IDENT))
      (composition
        (PROTECTED)
        (element
          (class_definition
            (class_type
              (FUNCTION))
            (class_specifier
              (identifier
                (IDENT))
              (composition
                (element
                  (component_clause
                    (type_prefix
                      (T_INPUT))
                    (type_specifier
                      (name_path
                        (IDENT)
                        (DOT)
                        (IDENT)))
                    (component_declaration
                      (declaration
                        (IDENT)))))
                (element
                  (component_clause
                    (type_prefix
                      (T_INPUT))
                    (type_specifier
                      (T_STRING))
                    (component_declaration
                      (declaration
                        (IDENT)))))
                (element
                  (component_clause
                    (type_prefix
                      (T_OUTPUT))
                    (type_specifier
                      (T_STRING))
                    (component_declaration
                      (declaration
                        (IDENT)))))
                (algorithm_clause
                  (T_ALGORITHM)
                  (algorithm
                    (assign_clause_a
                      (simple_expression
                        (component_reference__function_call
                          (component_reference
                            (IDENT))))
                      (ASSIGN)
                      (expression
                        (match_expression
                          (MATCHCONTINUE)
                          (expression
                            (simple_expression
                              (LPAR)
                              (expression
                                (simple_expression
                                  (component_reference__function_call
                                    (component_reference
                                      (IDENT)))))
                              (COMMA)
                              (expression
                                (simple_expression
                                  (component_reference__function_call
                                    (component_reference
                                      (IDENT)))))
                              (RPAR)))
                          (cases
                            (onecase
                              (CASE)
                              (expression
                                (simple_expression
                                  (LPAR)
                                  (expression
                                    (simple_expression
                                      (component_reference__function_call
                                        (component_reference
                                          (IDENT)
                                          (DOT)
                                          (IDENT))
                                        (function_call
                                          (LPAR)
                                          (function_arguments
                                            (named_argument
                                              (IDENT)
                                              (EQUALS)
                                              (expression
                                                (simple_expression
                                                  (STRING)))))
                                          (RPAR)))))
                                  (COMMA)
                                  (expression
                                    (simple_expression
                                      (component_reference__function_call
                                        (component_reference
                                          (WILD)))))
                                  (RPAR)))
                              (THEN)
                              (expression
                                (simple_expression
                                  (STRING))))
                            (cases2
                              (ELSE)
                              (expression
                                (simple_expression
                                  (component_reference__function_call
                                    (component_reference
                                      (IDENT)))))))
                          (T_END)
                          (MATCHCONTINUE)))))))
              (T_END)
              (identifier
                (IDENT))))))
      (T_END)
      (identifier
        (IDENT)))))
